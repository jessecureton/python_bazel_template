module(name = "${project}")

########################################
# Setings
########################################
PY_VERSION = "3.11.6"
GO_VERSION = "1.22.0"


########################################
# Set up rules_python and pip
########################################
bazel_dep(name = "rules_python", version = "0.31.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = PY_VERSION,
    is_default = True,
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    requirements_lock = "//:requirements_lock.txt",
    python_version = PY_VERSION,
)
use_repo(pip, "pip")

########################################
# Set up rules_go
########################################
bazel_dep(name = "rules_go", version = "0.46.0")
bazel_dep(name = "gazelle", version = "0.35.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = GO_VERSION)

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
)

########################################
# Set up hermetic Buildifier tools
########################################
# This is helpful because the old version used an http_archive to fetch the buildtools
# WORKSPACE, but it is incompatible with bzlmod Go toolchains. Instead let's just use
# a prebuilt version.
bazel_dep(
    name = "buildifier_prebuilt",
    version = "6.4.0",
    dev_dependency = True,
)

########################################
# Set up rules_pkg
########################################
bazel_dep(name = "rules_pkg", version = "0.10.1")
